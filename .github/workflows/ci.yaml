name: Contracts CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, reopened, synchronize, ready_for_review]

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ !github.event.pull_request.draft }}
    name: build
    outputs: 
      test-chunks:  ${{ steps['set-test-chunks'].outputs['test-chunks'] }}
      test-chunk-ids: ${{ steps['set-test-chunk-ids'].outputs['test-chunk-ids'] }}
    steps:
      - uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_GITHUB_SOLIDOC }}
      - name: Checkout repository
        uses: actions/checkout@v2.4.0
      - name: Setup node
        uses: actions/setup-node@v2.5.1
        with:
          node-version: "16.14.x"
          cache: "npm"
      - run: npm install
      - name: Prepare Environment
        shell: bash
        run: |
          cp .env.example .env
      - run: npm run build
      - run: npm run check:contracts
      - run: npm run check:scripts
      - name: Verify interface ids
        run: npm run natspec-interface-id
      - id: set-test-chunks
        run: echo "::set-output name=test-chunks::$(cat test/util/test-chunks.txt | jq -cM '.')"
        name: Set Chunks
      - id: set-test-chunk-ids
        name: Set Chunk IDs
        run: |
          echo "CHUNNKS"
          echo $CHUNKS
          echo "::set-output name=test-chunk-ids::$(echo $CHUNKS | jq -cM 'to_entries | map(.key)')"
        env:
          CHUNKS: ${{ steps['set-test-chunks'].outputs['test-chunks'] }}
  test:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ !github.event.pull_request.draft }}
    env:
      GAS_REPORTER_COINMARKETCAP_API_KEY: ${{ secrets.COINMARKETCAP_API_KEY }}
    name: test (chunk ${{ matrix.chunk }})
    strategy:
      matrix:
        chunk: ${{ fromJson(needs.build.outputs['test-chunk-ids']) }}
    steps:
      - uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_GITHUB_SOLIDOC }}
      - name: Checkout repository
        uses: actions/checkout@v2.4.0
      - name: Setup node
        uses: actions/setup-node@v2.5.1
        with:
          node-version: 16.14.x
          cache: "npm"
      - name: Install Dependencies
        run: npm install
      - name: Prepare Environment
        shell: bash
        run: |
          cp .env.example .env
      - name: Compile Contracts
        run: npm run build
      - name: Contract Sizing
        run: npm run size
      - name: Unit Tests 
        run: echo $CHUNKS | jq '.[${{ matrix.chunk }}] | .[] | @text' | xargs npx hardhat test 
        env:
          CHUNKS: ${{ needs.build.outputs['test-chunks'] }}

  integration-test:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ !github.event.pull_request.draft }}
    env:
      GAS_REPORTER_COINMARKETCAP_API_KEY: ${{ secrets.COINMARKETCAP_API_KEY }}
    name: "test:integration"
    steps:
      - uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_GITHUB_SOLIDOC }}
      - name: Checkout repository
        uses: actions/checkout@v2.4.0
      - name: Setup node
        uses: actions/setup-node@v2.5.1
        with:
          node-version: '16.14.x'
          cache: 'npm'
      - name: Install Dependencies
        run: npm install
      - name: Prepare Environment
        shell: bash
        run: |
          cp .env.example .env
      - name: Integration tests
        run: npx hardhat test test/integration/** 

  deploy-dry-run:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ !github.event.pull_request.draft }}
    name: "deploy: dry run"
    steps:
      - uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_GITHUB_SOLIDOC }}
      - name: Checkout repository
        uses: actions/checkout@v2.4.0
      - name: Setup node
        uses: actions/setup-node@v2.5.1
        with:
          node-version: "16.14.x"
          cache: "npm"
      - name: Install Dependencies
        run: npm install
      - name: Prepare Environment
        shell: bash
        run: |
          cp .env.example .env
      - name: Deploy suite locally
        run: npm run deploy-suite:hardhat
      - name: Cancelling tests in case of failure
        if: failure()
        uses: andymckay/cancel-action@0.2
